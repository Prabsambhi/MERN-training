// -> Using CSS in React.js

// -> Tailwind CSS setup

// -> What is a state

   In React.js, state is like a way to keep track of things that can change in a component.
   Each part of your app can have its own state, and whenever the state of a component changes,
   the component re-renders to reflect these changes.

// -> Hooks ( useState, useEffect, useRef and many more .... )

   Hooks are special functions in React that let you use react features in functional components.

// -> useState hook

   Explain with examples


const [count, setCount]=(useState(5)); 

a variable (count=5) & a function (setCount)

--------------------------------------------------------------------------------------------------

// -> Prettier extension

// -> Props

   Props (shortform for properties) are a way to pass data from one component to another in React. 
   Props allow components to be dynamic and reusable by allowing them to receive different
   data and behave accordingly.


// -> Notes application

--------------------------------------------------------------------------------------------------


// -> JSON Server npm, JSON Formatter extension
// -> setup db.json

// -> useEffect hook

   The useEffect hook in React is used to handle side effects in functional components.
   It allows you to perform side effects in your components, such as fetching data, 
   directly in the function component.

--------------------------------------------------------------------------------------------------

// -> react-router-dom
// -> <a href=""> vs <Link to="">

// -> useNavigate hook

--------------------------------------------------------------------------------------------------

// -> Local Storage

   Local storage  you to store data in the browser.
   The data persists even after the browser is closed and reopened.
   Stores data in key-value pairs.


   In React, state updates are asynchronous. This means that when you call setNotes, 
   React doesn't immediately update the notes state.
   Instead, it schedules the update and then proceeds with the rest of the function.
   As a result, if you try to use the updated notes state right after calling setNotes,
   you will still get the previous state value.

// -> react-hot-toast

// -> Custom Hooks

   Custom Hooks are a powerful feature in React that allows you to extract and reuse logic across 
   different components. They help keep your components clean and organized by abstracting away 
   complex logic into reusable functions.

// -> Context API

   Scenarios where you have data that needs to be accessible by many components at different levels.




   